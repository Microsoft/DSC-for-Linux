require 'test/unit'
require_relative 'collectmcafeeinfo'

class McafeeTest < Test::Unit::TestCase

    timeformatVariations = ["%a %b %d %H:%M:%S %Y", "%a %b %-d %H:%M:%S %Y",
			                        "%a %d %b %Y %H:%M:%S %p %Z", "%a %e %b %Y %H:%M:%S %p %Z", "%a %d %b %Y %H:%M:%S %P %Z", "%a %e %b %Y %H:%M:%S %P %Z", 
									"%d/%m/%y %H:%M:%S %Z", "%e/%-m/%y %H:%M:%S %Z", "%d/%m/%y %H:%M:%S %z", "%e/%-m/%y %H:%M:%S %z",
									"%m/%d/%y %H:%M:%S %Z", "%-m/%e/%y %H:%M:%S %Z", "%m/%d/%y %H:%M:%S %z", "%e/%-m/%y %H:%M:%S %z",
									"%y/%m/%d %H:%M:%S %Z", "%y/%-m/%e %H:%M:%S %Z", "%y/%m/%d %H:%M:%S %z", "%y/%-m/%e %H:%M:%S %z"]

    def test_parseMcAfeeScanStatus_Not_Started
        taskcmd = "|1      quick scan                     ODS                     Not Started    19/01/17 07:43:09 UTC |"
        assert_equal("Not Started", McAfee.parseMcAfeeScanStatus(taskcmd))
    end

    def test_parseMcAfeeScanStatus_Running
        taskcmd = "|1      quick scan                     ODS                     Running    19/01/17 07:43:09 UTC |"
        assert_equal("Running", McAfee.parseMcAfeeScanStatus(taskcmd))
    end

    def test_parseMcAfeeScanStatus_Completed
        taskcmd = "|1      quick scan                     ODS                     Completed    19/01/17 07:43:09 UTC |"
        assert_equal("Completed", McAfee.parseMcAfeeScanStatus(taskcmd))
    end

    def test_parseMcAfeeDateTime_timeformatVariations_index_1
        taskcmd = "|2      full scan                   ODS                    Running      Tue Jan 12 08:42:20 2020 |"
        assert_equal("2020-01-12 08:42:20 -0800", McAfee.parseMcAfeeDateTime(taskcmd).to_s)
    end

    def test_parseMcAfeeDateTime_timeformatVariations_index_2
        taskcmd = "|2      full scan                   ODS                    Running      Tue Jan 2 08:42:20 2020 |"
        assert_equal("2020-01-02 08:42:20 -0800", McAfee.parseMcAfeeDateTime(taskcmd).to_s)
    end

    def test_parseMcAfeeDateTime_timeformatVariations_index_3
        taskcmd = "|2      full scan                   ODS                    Running      Wed 02 Jun 2022 01:00:01 AM UTC |"
        assert_equal("2022-06-02 01:00:01 UTC", McAfee.parseMcAfeeDateTime(taskcmd).to_s)
    end

    def test_parseMcAfeeDateTime_timeformatVariations_index_4
        taskcmd = "|2      full scan                   ODS                    Running      Wed 2 Jun 2022 01:00:01 AM UTC |"
        assert_equal("2022-06-02 01:00:01 UTC", McAfee.parseMcAfeeDateTime(taskcmd).to_s)
    end

    def test_parseMcAfeeDateTime_timeformatVariations_index_5
        taskcmd = "|2      full scan                   ODS                    Running      Wed 02 Jun 2022 01:00:01 am UTC |"
        assert_equal("2022-06-02 01:00:01 UTC", McAfee.parseMcAfeeDateTime(taskcmd).to_s)
    end

    def test_parseMcAfeeDateTime_timeformatVariations_index_6
        taskcmd = "|2      full scan                   ODS                    Running      Wed 2 Jun 2022 01:00:01 am UTC |"
        assert_equal("2022-06-02 01:00:01 UTC", McAfee.parseMcAfeeDateTime(taskcmd).to_s)
    end

    def test_parseMcAfeeDateTime_timeformatVariations_index_7
        taskcmd = "|2      full scan                   ODS                    Running      01/05/22 17:23:26 UTC |"
        assert_equal("2022-05-01 17:23:26 UTC", McAfee.parseMcAfeeDateTime(taskcmd).to_s)
    end

    def test_parseMcAfeeDateTime_timeformatVariations_index_8
        taskcmd = "|2      full scan                   ODS                    Running      01/05/22 17:23:26 -0800 |"
        assert_equal("2022-05-01 17:23:26 -0800", McAfee.parseMcAfeeDateTime(taskcmd).to_s)
    end

    def test_parseMcAfeeDateTime_timeformatVariations_index_9
        taskcmd = "|2      full scan                   ODS                    Running      1/5/22 17:23:26 UTC |"
        assert_equal("2022-05-01 17:23:26 UTC", McAfee.parseMcAfeeDateTime(taskcmd).to_s)
    end

    def test_parseMcAfeeDateTime_timeformatVariations_index_10
        taskcmd = "|2      full scan                   ODS                    Running      1/5/22 17:23:26 -0800 |"
        assert_equal("2022-05-01 17:23:26 -0800", McAfee.parseMcAfeeDateTime(taskcmd).to_s)
    end

end
